name: Build and Publish Docker Images

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'Dockerfiles/**'

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      matrix: ${{ steps.discover.outputs.matrix }}
      version: ${{ steps.tag_version.outputs.new_version }}
      tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Bump version and create tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          create_annotated_tag: true
          tag_prefix: v

      - name: Discover Dockerfiles
        id: discover
        run: |
          files=$(find Dockerfiles -type f -name Dockerfile)
          matrix=$(echo "$files" | jq -R -s -c 'split("\n")[:-1] | {dockerfile: .}')
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  build-matrix:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-and-push.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image name and context
        id: meta
        run: |
          context_path=$(dirname "${{ matrix.dockerfile }}")
          image_name=$(echo "$context_path" | sed 's|^Dockerfiles/||' | tr '/.' '-' | tr '[:upper:]' '[:lower:]')
          if [[ -z "$image_name" ]]; then image_name="docker"; fi
          echo "context_path=$context_path" >> $GITHUB_OUTPUT
          echo "image_name=$image_name" >> $GITHUB_OUTPUT

      - name: Set tags
        id: tags
        run: |
          echo "tags=${{ env.REGISTRY }}/${{ github.repository_owner }}/resume/${{ steps.meta.outputs.image_name }}:latest,${{ env.REGISTRY }}/${{ github.repository_owner }}/resume/${{ steps.meta.outputs.image_name }}:${{ needs.build-and-push.outputs.version }},${{ env.REGISTRY }}/${{ github.repository_owner }}/resume/${{ steps.meta.outputs.image_name }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: "${{ steps.meta.outputs.context_path }}"
          file: "${{ matrix.dockerfile }}"
          push: true
          tags: "${{ steps.tags.outputs.tags }}"

      - name: Show Image Info
        run: |
          echo "Image: ${{ steps.tags.outputs.tags }}"
          echo "Version: ${{ needs.build-and-push.outputs.version }}"
          echo "Tag: ${{ needs.build-and-push.outputs.tag }}"

  release:
    needs: [build-matrix, build-and-push]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: |
            {
              "template": "## What's Changed\n\n${UNCATEGORIZED}\n\n## Docker Image Details\n- Repository: `${{ env.REGISTRY }}/${{ github.repository_owner }}/resume` `\n- Version: `${{ needs.build-and-push.outputs.version }}`\n- Git SHA: `${{ github.sha }}`",
              "categories": [
                {
                  "title": "## 🚀 Features",
                  "labels": ["feature", "enhancement"]
                },
                {
                  "title": "## 🐛 Fixes",
                  "labels": ["fix", "bug"]
                },
                {
                  "title": "## 📝 Documentation",
                  "labels": ["documentation", "docs"]
                },
                {
                  "title": "## 🔄 Dependencies",
                  "labels": ["dependencies", "dependency"]
                },
                {
                  "title": "## 🛠 Maintenance",
                  "labels": ["maintenance", "chore"]
                },
                {
                  "title": "## Other Changes",
                  "labels": []
                }
              ],
              "ignore_labels": ["duplicate", "invalid", "question", "wontfix"]
            }

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build-and-push.outputs.tag }}
          name: ${{ needs.build-and-push.outputs.version }}
          body: ${{ steps.github_release.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Show Release Info
        run: |
          echo "Version: ${{ needs.build-and-push.outputs.version }}"
          echo "Tag: ${{ needs.build-and-push.outputs.tag }}"
